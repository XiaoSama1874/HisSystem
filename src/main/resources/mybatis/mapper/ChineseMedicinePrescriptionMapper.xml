<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaosama.HisSystem.dao.ChineseMedicinePrescriptionMapper" >
    <resultMap id="BaseResultMap" type="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescription">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="register_id" property="registerId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="frequency" property="frequency" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="use_type" property="useType" jdbcType="VARCHAR" />
    <result column="func" property="func" jdbcType="VARCHAR" />
    <result column="instruction" property="instruction" jdbcType="VARCHAR" />
    <result column="subscript" property="subscript" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, register_id, create_time, name, category, amount, frequency, status, use_type, 
    func, instruction, subscript
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescriptionExample">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chinese_medicine_prescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from chinese_medicine_prescription
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from chinese_medicine_prescription
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescriptionExample">
    delete from chinese_medicine_prescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <insert id="insert" parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescription">
    insert into chinese_medicine_prescription (id, register_id, create_time, 
      name, category, amount, 
      frequency, status, use_type, 
      func, instruction, subscript
      )
    values (#{id,jdbcType=INTEGER}, #{registerId,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, 
      #{name,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{frequency,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{useType,jdbcType=VARCHAR}, 
      #{func,jdbcType=VARCHAR}, #{instruction,jdbcType=VARCHAR}, #{subscript,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescription">
    insert into chinese_medicine_prescription
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="registerId != null" >
        register_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="useType != null" >
        use_type,
      </if>
      <if test="func != null" >
        func,
      </if>
      <if test="instruction != null" >
        instruction,
      </if>
      <if test="subscript != null" >
        subscript,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="registerId != null" >
        #{registerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="useType != null" >
        #{useType,jdbcType=VARCHAR},
      </if>
      <if test="func != null" >
        #{func,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null" >
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="subscript != null" >
        #{subscript,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescriptionExample"
            resultType="java.lang.Integer">
    select count(*) from chinese_medicine_prescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update chinese_medicine_prescription
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.registerId != null" >
        register_id = #{record.registerId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.frequency != null" >
        frequency = #{record.frequency,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.useType != null" >
        use_type = #{record.useType,jdbcType=VARCHAR},
      </if>
      <if test="record.func != null" >
        func = #{record.func,jdbcType=VARCHAR},
      </if>
      <if test="record.instruction != null" >
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.subscript != null" >
        subscript = #{record.subscript,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update chinese_medicine_prescription
    set id = #{record.id,jdbcType=INTEGER},
      register_id = #{record.registerId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      frequency = #{record.frequency,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      use_type = #{record.useType,jdbcType=VARCHAR},
      func = #{record.func,jdbcType=VARCHAR},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      subscript = #{record.subscript,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescription">
    update chinese_medicine_prescription
    <set >
      <if test="registerId != null" >
        register_id = #{registerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="frequency != null" >
        frequency = #{frequency,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="useType != null" >
        use_type = #{useType,jdbcType=VARCHAR},
      </if>
      <if test="func != null" >
        func = #{func,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null" >
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="subscript != null" >
        subscript = #{subscript,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.xiaosama.HisSystem.pojo.po.ChineseMedicinePrescription">
    update chinese_medicine_prescription
    set register_id = #{registerId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      frequency = #{frequency,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      use_type = #{useType,jdbcType=VARCHAR},
      func = #{func,jdbcType=VARCHAR},
      instruction = #{instruction,jdbcType=VARCHAR},
      subscript = #{subscript,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>