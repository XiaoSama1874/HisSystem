<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaosama.HisSystem.dao.PatientMapper" >
  <resultMap id="BaseResultMap" type="com.xiaosama.HisSystem.po.Patient" >
    <id column="medical_id" property="medicalId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birth_date" property="birthDate" jdbcType="DATE" />
    <result column="identity_id" property="identityId" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    medical_id, name, sex, birth_date, identity_id, address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiaosama.HisSystem.po.PatientExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from patient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from patient
    where medical_id = #{medicalId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from patient
    where medical_id = #{medicalId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaosama.HisSystem.po.PatientExample" >
    delete from patient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaosama.HisSystem.po.Patient" >
    insert into patient (medical_id, name, sex, 
      birth_date, identity_id, address
      )
    values (#{medicalId,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, 
      #{birthDate,jdbcType=DATE}, #{identityId,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaosama.HisSystem.po.Patient" >
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="medicalId != null" >
        medical_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthDate != null" >
        birth_date,
      </if>
      <if test="identityId != null" >
        identity_id,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="medicalId != null" >
        #{medicalId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthDate != null" >
        #{birthDate,jdbcType=DATE},
      </if>
      <if test="identityId != null" >
        #{identityId,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaosama.HisSystem.po.PatientExample" resultType="java.lang.Integer" >
    select count(*) from patient
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update patient
    <set >
      <if test="record.medicalId != null" >
        medical_id = #{record.medicalId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthDate != null" >
        birth_date = #{record.birthDate,jdbcType=DATE},
      </if>
      <if test="record.identityId != null" >
        identity_id = #{record.identityId,jdbcType=CHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update patient
    set medical_id = #{record.medicalId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birth_date = #{record.birthDate,jdbcType=DATE},
      identity_id = #{record.identityId,jdbcType=CHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaosama.HisSystem.po.Patient" >
    update patient
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthDate != null" >
        birth_date = #{birthDate,jdbcType=DATE},
      </if>
      <if test="identityId != null" >
        identity_id = #{identityId,jdbcType=CHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where medical_id = #{medicalId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaosama.HisSystem.po.Patient" >
    update patient
    set name = #{name,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      birth_date = #{birthDate,jdbcType=DATE},
      identity_id = #{identityId,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR}
    where medical_id = #{medicalId,jdbcType=INTEGER}
  </update>
</mapper>